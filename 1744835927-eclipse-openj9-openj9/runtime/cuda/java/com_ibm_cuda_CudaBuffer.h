/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_ibm_cuda_CudaBuffer */

#ifndef _Included_com_ibm_cuda_CudaBuffer
#define _Included_com_ibm_cuda_CudaBuffer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    allocate
 * Signature: (IJ)J
 */
jlong JNICALL Java_com_ibm_cuda_CudaBuffer_allocate
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    allocateDirectBuffer
 * Signature: (J)Ljava/nio/ByteBuffer;
 */
jobject JNICALL Java_com_ibm_cuda_CudaBuffer_allocateDirectBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyFromDevice
 * Signature: (IJIJJ)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyFromDevice
  (JNIEnv *, jclass, jint, jlong, jint, jlong, jlong);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyFromHostByte
 * Signature: (IJ[BII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyFromHostByte
  (JNIEnv *, jclass, jint, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyFromHostChar
 * Signature: (IJ[CII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyFromHostChar
  (JNIEnv *, jclass, jint, jlong, jcharArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyFromHostDirect
 * Signature: (IJLjava/nio/Buffer;JJ)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyFromHostDirect
  (JNIEnv *, jclass, jint, jlong, jobject, jlong, jlong);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyFromHostDouble
 * Signature: (IJ[DII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyFromHostDouble
  (JNIEnv *, jclass, jint, jlong, jdoubleArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyFromHostFloat
 * Signature: (IJ[FII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyFromHostFloat
  (JNIEnv *, jclass, jint, jlong, jfloatArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyFromHostInt
 * Signature: (IJ[III)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyFromHostInt
  (JNIEnv *, jclass, jint, jlong, jintArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyFromHostLong
 * Signature: (IJ[JII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyFromHostLong
  (JNIEnv *, jclass, jint, jlong, jlongArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyFromHostShort
 * Signature: (IJ[SII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyFromHostShort
  (JNIEnv *, jclass, jint, jlong, jshortArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyToHostByte
 * Signature: (IJ[BII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyToHostByte
  (JNIEnv *, jclass, jint, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyToHostChar
 * Signature: (IJ[CII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyToHostChar
  (JNIEnv *, jclass, jint, jlong, jcharArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyToHostDirect
 * Signature: (IJLjava/nio/Buffer;JJ)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyToHostDirect
  (JNIEnv *, jclass, jint, jlong, jobject, jlong, jlong);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyToHostDouble
 * Signature: (IJ[DII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyToHostDouble
  (JNIEnv *, jclass, jint, jlong, jdoubleArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyToHostFloat
 * Signature: (IJ[FII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyToHostFloat
  (JNIEnv *, jclass, jint, jlong, jfloatArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyToHostInt
 * Signature: (IJ[III)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyToHostInt
  (JNIEnv *, jclass, jint, jlong, jintArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyToHostLong
 * Signature: (IJ[JII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyToHostLong
  (JNIEnv *, jclass, jint, jlong, jlongArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    copyToHostShort
 * Signature: (IJ[SII)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_copyToHostShort
  (JNIEnv *, jclass, jint, jlong, jshortArray, jint, jint);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    fill
 * Signature: (IJIIJ)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_fill
  (JNIEnv *, jclass, jint, jlong, jint, jint, jlong);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    freeDirectBuffer
 * Signature: (Ljava/nio/Buffer;)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_freeDirectBuffer
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_ibm_cuda_CudaBuffer
 * Method:    release
 * Signature: (IJ)V
 */
void JNICALL Java_com_ibm_cuda_CudaBuffer_release
  (JNIEnv *, jclass, jint, jlong);

#ifdef __cplusplus
}
#endif
#endif
