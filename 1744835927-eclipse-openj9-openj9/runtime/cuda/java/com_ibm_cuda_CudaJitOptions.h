/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_ibm_cuda_CudaJitOptions */

#ifndef _Included_com_ibm_cuda_CudaJitOptions
#define _Included_com_ibm_cuda_CudaJitOptions
#ifdef __cplusplus
extern "C" {
#endif
#undef com_ibm_cuda_CudaJitOptions_NUM_OPT_CODES
#define com_ibm_cuda_CudaJitOptions_NUM_OPT_CODES 15L
#undef com_ibm_cuda_CudaJitOptions_OPT_CACHE_MODE
#define com_ibm_cuda_CudaJitOptions_OPT_CACHE_MODE 14L
#undef com_ibm_cuda_CudaJitOptions_OPT_ERROR_LOG_BUFFER_SIZE_BYTES
#define com_ibm_cuda_CudaJitOptions_OPT_ERROR_LOG_BUFFER_SIZE_BYTES 6L
#undef com_ibm_cuda_CudaJitOptions_OPT_FALLBACK_STRATEGY
#define com_ibm_cuda_CudaJitOptions_OPT_FALLBACK_STRATEGY 10L
#undef com_ibm_cuda_CudaJitOptions_OPT_GENERATE_DEBUG_INFO
#define com_ibm_cuda_CudaJitOptions_OPT_GENERATE_DEBUG_INFO 11L
#undef com_ibm_cuda_CudaJitOptions_OPT_GENERATE_LINE_INFO
#define com_ibm_cuda_CudaJitOptions_OPT_GENERATE_LINE_INFO 13L
#undef com_ibm_cuda_CudaJitOptions_OPT_INFO_LOG_BUFFER_SIZE_BYTES
#define com_ibm_cuda_CudaJitOptions_OPT_INFO_LOG_BUFFER_SIZE_BYTES 4L
#undef com_ibm_cuda_CudaJitOptions_OPT_LOG_VERBOSE
#define com_ibm_cuda_CudaJitOptions_OPT_LOG_VERBOSE 12L
#undef com_ibm_cuda_CudaJitOptions_OPT_MAX_REGISTERS
#define com_ibm_cuda_CudaJitOptions_OPT_MAX_REGISTERS 0L
#undef com_ibm_cuda_CudaJitOptions_OPT_OPTIMIZATION_LEVEL
#define com_ibm_cuda_CudaJitOptions_OPT_OPTIMIZATION_LEVEL 7L
#undef com_ibm_cuda_CudaJitOptions_OPT_TARGET
#define com_ibm_cuda_CudaJitOptions_OPT_TARGET 9L
#undef com_ibm_cuda_CudaJitOptions_OPT_TARGET_FROM_CUCONTEXT
#define com_ibm_cuda_CudaJitOptions_OPT_TARGET_FROM_CUCONTEXT 8L
#undef com_ibm_cuda_CudaJitOptions_OPT_THREADS_PER_BLOCK
#define com_ibm_cuda_CudaJitOptions_OPT_THREADS_PER_BLOCK 1L
#undef com_ibm_cuda_CudaJitOptions_OPT_WALL_TIME
#define com_ibm_cuda_CudaJitOptions_OPT_WALL_TIME 2L
/*
 * Class:     com_ibm_cuda_CudaJitOptions
 * Method:    create
 * Signature: ([I)J
 */
jlong JNICALL Java_com_ibm_cuda_CudaJitOptions_create
  (JNIEnv *, jclass, jintArray);

/*
 * Class:     com_ibm_cuda_CudaJitOptions
 * Method:    destroy
 * Signature: (J)V
 */
void JNICALL Java_com_ibm_cuda_CudaJitOptions_destroy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_cuda_CudaJitOptions
 * Method:    getErrorLogBuffer
 * Signature: (J)Ljava/lang/String;
 */
jstring JNICALL Java_com_ibm_cuda_CudaJitOptions_getErrorLogBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_cuda_CudaJitOptions
 * Method:    getInfoLogBuffer
 * Signature: (J)Ljava/lang/String;
 */
jstring JNICALL Java_com_ibm_cuda_CudaJitOptions_getInfoLogBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_cuda_CudaJitOptions
 * Method:    getThreadsPerBlock
 * Signature: (J)I
 */
jint JNICALL Java_com_ibm_cuda_CudaJitOptions_getThreadsPerBlock
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_ibm_cuda_CudaJitOptions
 * Method:    getWallTime
 * Signature: (J)F
 */
jfloat JNICALL Java_com_ibm_cuda_CudaJitOptions_getWallTime
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
