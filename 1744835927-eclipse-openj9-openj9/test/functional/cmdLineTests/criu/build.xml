<?xml version="1.0"?>

<!--
  Copyright IBM Corp. and others 2022

  This program and the accompanying materials are made available under
  the terms of the Eclipse Public License 2.0 which accompanies this
  distribution and is available at https://www.eclipse.org/legal/epl-2.0/
  or the Apache License, Version 2.0 which accompanies this distribution and
  is available at https://www.apache.org/licenses/LICENSE-2.0.

  This Source Code may also be made available under the following
  Secondary Licenses when the conditions for such availability set
  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
  General Public License, version 2 with the GNU Classpath
  Exception [1] and GNU General Public License, version 2 with the
  OpenJDK Assembly Exception [2].

  [1] https://www.gnu.org/software/classpath/license.html
  [2] https://openjdk.org/legal/assembly-exception.html

  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
-->

<project name="criu" default="build" basedir=".">
	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	<description>
		Build cmdLineTests_criu
	</description>

	<import file="${TEST_ROOT}/functional/cmdLineTests/buildTools.xml"/>

	<!-- set properties for this build -->
	<property name="DEST" value="${BUILD_ROOT}/functional/cmdLineTests/criu" />
	<property name="src" location="./src"/>
	<property name="TestUtilities" location="../../TestUtilities/src"/>
	<property name="build" location="./bin"/>
	<property name="TestUtilitiesJ9" location="../../TestUtilitiesJ9/src" />

	<target name="init">
		<mkdir dir="${DEST}" />
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="Using java ${JDK_VERSION} to compile the source ">
		<echo>Ant version is ${ant.version}</echo>
		<echo>============COMPILER SETTINGS============</echo>
		<echo>===fork:                         yes</echo>
		<echo>===executable:                   ${compiler.javac}</echo>
		<echo>===debug:                        on</echo>
		<echo>===destdir:                      ${DEST}</echo>
		<if>
			<not>
				<matches string="${JDK_VERSION}" pattern="^(8|9|1[0-9])$$" />
			</not>
			<then>
				<property name="enablePreview" value="--enable-preview -source ${JDK_VERSION}" />
			</then>
			<else>
				<property name="enablePreview" value="" />
				<property name="excludeTestMachineResourceChange" value="org/openj9/criu/TestMachineResourceChange.java" />
			</else>
		</if>
		<if>
			<not>
				<contains string="${TEST_FLAG}" substring="CRAC" />
			</not>
			<then>
				<property name="excludeTestJDKCRAC" value="org/openj9/criu/TestJDKCRAC.java" />
			</then>
		</if>
		<if>
			<equals arg1="${JDK_VERSION}" arg2="8" />
			<then>
				<property name="excludeJDK11UpTimeoutAdjustmentTest" value="org/openj9/criu/JDK11UpTimeoutAdjustmentTest.java" />
				<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<exclude name="${excludeJDK11UpTimeoutAdjustmentTest}" />
					<exclude name="${excludeTestMachineResourceChange}" />
					<src path="${src}" />
					<src path="${TestUtilities}" />
					<classpath>
						<pathelement location="${LIB_DIR}/testng.jar"/>
					</classpath>
				</javac>
			</then>
			<else>
				<property name="addExports" value="--add-exports jdk.management/jdk.crac.management=ALL-UNNAMED --add-exports java.base/jdk.crac=ALL-UNNAMED
					--add-exports java.base/openj9.internal.criu=ALL-UNNAMED --add-exports java.base/jdk.internal.misc=ALL-UNNAMED" />
				<echo>===addExports:        ${addExports}</echo>
				<echo>===enablePreview:     ${enablePreview}</echo>
				<javac srcdir="${src}" destdir="${build}" debug="true" fork="true" executable="${compiler.javac}" includeAntRuntime="false" encoding="ISO-8859-1">
					<compilerarg line="${addExports}" />
					<compilerarg line="${enablePreview}" />
					<exclude name="${excludeTestJDKCRAC}" />
					<exclude name="${excludeTestMachineResourceChange}" />
					<src path="${src}" />
					<src path="${TestUtilities}" />
					<src path="${TestUtilitiesJ9}" />
					<classpath>
						<pathelement location="${LIB_DIR}/testng.jar"/>
					</classpath>
				</javac>
			</else>
		</if>
	</target>

	<target name="dist" depends="compile" description="generate the distribution">
		<jar jarfile="${DEST}/criu.jar" filesonly="true">
			<fileset dir="${build}" />
			<fileset dir="${src}" />
		</jar>
		<copy todir="${DEST}">
			<fileset dir="${src}/../" includes="*.xml" />
			<fileset dir="${src}/../" includes="*.mk" />
			<fileset dir="${src}/../" includes="*.sh" />
			<fileset dir="${src}/../../jitserver" includes="jitserverconfig.sh" />
		</copy>
	</target>

	<target name="clean" depends="dist" description="clean up">
		<!-- Delete the ${build} directory trees -->
		<delete dir="${build}" />
	</target>

	<target name="build" depends="buildCmdLineTestTools">
		<if>
			<or>
				<contains string="${TEST_FLAG}" substring="CRAC" />
				<contains string="${TEST_FLAG}" substring="CRIU" />
			</or>
			<then>
				<antcall target="clean" inheritall="true" />
			</then>
		</if>
	</target>
</project>
